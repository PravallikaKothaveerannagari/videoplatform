# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - plvids

on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'apps/server/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/server
    environment:
      name: 'Production'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      - name: Create settings.ini file
        run: |
          echo [settings] >> settings.ini
          echo "ALLOWED_HOSTS = ${{ secrets.ALLOWED_HOSTS }}" >> settings.ini
          echo "SECRET_KEY = ${{ secrets.SECRET_KEY }}" >> settings.ini
          echo "DB_NAME = ${{ secrets.DBNAME }}" >> settings.ini
          echo "DB_USER = ${{ secrets.DBUSER }}" >> settings.ini
          echo "DB_PASSWORD = ${{ secrets.DBPASSWORD }}" >> settings.ini
          echo "DB_ENGINE = ${{ secrets.DB_ENGINE }}" >> settings.ini
          echo "DB_HOST = ${{ secrets.DBHOST }}" >> settings.ini
          echo "DB_PORT = ${{ secrets.DBPORT }}" >> settings.ini
          echo "DEFAULT_FILE_STORAGE = ${{ secrets.DEFAULT_FILE_STORAGE }}" >> settings.ini
          echo "EMAIL_HOST = ${{ secrets.EMAIL_HOST }}" >> settings.ini
          echo "EMAIL_PORT = ${{ secrets.EMAIL_PORT }}" >> settings.ini
          echo "EMAIL_HOST_USER = ${{ secrets.EMAIL_HOST_USER }}" >> settings.ini
          echo "EMAIL_HOST_PASSWORD = ${{ secrets.EMAIL_HOST_PASSWORD }}" >> settings.ini
          echo "GS_BUCKET_NAME = ${{ secrets.EMAIL_HOST_PASSWORD }}" >> settings.ini
          echo "GS_DEFAULT_ACL = ${{ secrets.GS_DEFAULT_ACL }}" >> settings.ini
          echo '${{secrets.GS_SERVICE_ACCOUNT}}' >> serviceaccount.json
        shell: bash

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            ./apps/server/release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_754C52EAFC6F4A008F87DC9AA9A8F76F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2C95D103AE74457F96156996F0C8BFAA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_CEAFB170DDD644A88BEBDF0DA8A52148 }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'plvids'
          slot-name: 'Production'
